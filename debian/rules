#!/usr/bin/make -f

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This is the debhelper compatability version to use.
export DH_COMPAT=3

DEB_BUILD_PROG:=debuild --preserve-envvar PATH --preserve-envvar CCACHE_DIR -us -uc $(DEB_BUILD_PROG_OPTS)
S_DEBVER=$(shell dpkg-parsechangelog |sed -n -e '/^Version:/s/^Version: //p')


# make the package build on ubuntu and debian
DIST = $(shell lsb_release -i -s)
COMMON_FLAGS= --prefix=/usr \
		--mandir=\$${prefix}/share/man \
		 --infodir=\$${prefix}/share/info \
		--localstatedir=/var/lib/synaptic \
	         --sysconfdir=/etc --with-vte --with-pkg-hold

CREATE_SUPPORTED_PIXMAP="true"
CONFIGURE_FLAGS = $(COMMON_FLAGS)

# special case for ubuntu
ifeq "$(DIST)" "Ubuntu"
	CONFIGURE_FLAGS = $(COMMON_FLAGS) \
			  --with-apt-authentication \
			  --with-nice-dpkg-status
	CREATE_SUPPORTED_PIXMAP=uudecode debian/package-supported.png.uu -o $(CURDIR)/debian/synaptic/usr/share/synaptic/pixmaps/package-supported.png
endif

build: build-stamp
build-stamp: patch
	dh_testdir
	./configure  $(CONFIGURE_FLAGS) 
	$(MAKE)
	(cd po;intltool-update -p --verbose)
	touch build-stamp


#build-debtags: build-debtags-stamp
#build-debtags-stamp:
#	dh_testdir 
#	./configure --prefix=/usr --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info --sysconfdir=/etc --with-vte --with-debian-description-parser --with-pkg-hold --with-debtags
#	$(MAKE)
#	touch build-debtags-stamp


clean: clean1 unpatch
clean1: 
	dh_testdir
	dh_testroot
	rm -f build-stamp build-debtags-stamp install-stamp install-debtags-stamp
	-$(MAKE) distclean
	dh_clean

#clean-debtags:
#	dh_testdir
#	dh_testroot
#	rm -f build-stamp build-debtags-stamp install-stamp install-debtags-stamp
#	dh_clean -k

install: install-stamp
install-stamp: build-stamp
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs -psynaptic
	$(MAKE) install DESTDIR=$(CURDIR)/debian/synaptic	
	$(CREATE_SUPPORTED_PIXMAP)
	cp debian/synaptic_32x32.xpm $(CURDIR)/debian/synaptic/usr/share/synaptic/pixmaps


#install-debtags: install-debtags-stamp
#install-debtags-stamp: build-debtags
#	dh_testdir 
#	dh_testroot
#	dh_clean -k
	#dh_installdirs -psynaptic-debtags
#	$(MAKE) install DESTDIR=$(CURDIR)/debian/synaptic-debtags
#	cp debian/synaptic_32x32.xpm $(CURDIR)/debian/synaptic-debtags/usr/share/synaptic/pixmaps

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do here

# Build architecture-dependent files here.
binary-arch: build install synaptic 


synaptic: build
	dh_testdir -psynaptic
	dh_testroot -psynaptic
	dh_installdocs -psynaptic
	dh_scrollkeeper -psynaptic
	dh_installman -psynaptic man/synaptic.es.8 man/synaptic.fr.8 man/synaptic.tr.8 man/synaptic.pt_BR.8
	dh_installmenu -psynaptic
	dh_installchangelogs ChangeLog -psynaptic
	dh_link -psynaptic
	dh_strip -psynaptic
	dh_compress -psynaptic
	dh_fixperms -psynaptic
	dh_installdeb -psynaptic
	dh_shlibdeps -psynaptic
	dh_gencontrol -psynaptic
	dh_md5sums -psynaptic
	dh_builddeb -psynaptic

#synaptic-debtags: install-debtags
#	dh_testdir -psynaptic-debtags
#	dh_testroot -psynaptic-debtags
#	dh_installdocs -psynaptic-debtags 
	#TODO README README.debtags NEWS debian/NEWS.Debian
#	dh_scrollkeeper -psynaptic-debtags
#	dh_installman -psynaptic-debtags man/synaptic.es.8 man/synaptic.fr.8 man/synaptic.tr.8 man/synaptic.pt_BR.8
#	dh_installmenu -psynaptic-debtags
#	dh_installchangelogs ChangeLog -psynaptic-debtags
#	dh_link -psynaptic-debtags
#	dh_strip -psynaptic-debtags
#	dh_compress -psynaptic-debtags
#	dh_fixperms -psynaptic-debtags
#	dh_installdeb -psynaptic-debtags
#	dh_shlibdeps -psynaptic-debtags
#	dh_gencontrol -psynaptic-debtags
#	dh_md5sums -psynaptic-debtags
#	dh_builddeb -psynaptic-debtags

patch: patch-stamp
patch-stamp:
	cp debian/patches/00list.$(DIST) debian/patches/00list
	dpatch apply-all
	touch patch-stamp

unpatch:
	cp debian/patches/00list.$(DIST) debian/patches/00list
	dpatch deapply-all
	rm -rf patch-stamp debian/patched

svn-build:
	rm -rf debian/svn-build
	mkdir -p debian/svn-build/synaptic-$(S_DEBVER)
	svn ls -R | xargs tar --no-recursion -c -v -f -  | (cd debian/svn-build/synaptic-$(S_DEBVER) ; tar xf -)
	debian/svn-build/synaptic-$(S_DEBVER)/autogen.sh
	(cd debian/svn-build/synaptic-$(S_DEBVER); $(DEB_BUILD_PROG))


binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install patch unpatch
